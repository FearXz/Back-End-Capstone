// <auto-generated />
using System;
using Back_End_Capstone.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Back_End_Capstone.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Back_End_Capstone.Models.Azienda", b =>
                {
                    b.Property<int>("IdAzienda")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAzienda"));

                    b.Property<string>("CAP")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("Citta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Indirizzo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeAzienda")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartitaIva")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdAzienda");

                    b.ToTable("Aziende");
                });

            modelBuilder.Entity("Back_End_Capstone.Models.Categorie", b =>
                {
                    b.Property<int>("IdCategorie")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCategorie"));

                    b.Property<string>("NomeCategoria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCategorie");

                    b.ToTable("Categorie");
                });

            modelBuilder.Entity("Back_End_Capstone.Models.CategorieRistorante", b =>
                {
                    b.Property<int>("IdCategorieRistorante")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCategorieRistorante"));

                    b.Property<int>("IdCategorie")
                        .HasColumnType("int");

                    b.Property<int>("IdRistorante")
                        .HasColumnType("int");

                    b.HasKey("IdCategorieRistorante");

                    b.HasIndex("IdCategorie");

                    b.HasIndex("IdRistorante");

                    b.ToTable("CategorieRistoranti");
                });

            modelBuilder.Entity("Back_End_Capstone.Models.IngredientiProdottoAcquistato", b =>
                {
                    b.Property<int>("IdIngredientiProdottoAcquistato")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdIngredientiProdottoAcquistato"));

                    b.Property<int>("IdProdottoAcquistato")
                        .HasColumnType("int");

                    b.Property<string>("NomeIngrediente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PrezzoIngrediente")
                        .HasColumnType("float");

                    b.HasKey("IdIngredientiProdottoAcquistato");

                    b.HasIndex("IdProdottoAcquistato");

                    b.ToTable("IngredientiProdottiAcquistati");
                });

            modelBuilder.Entity("Back_End_Capstone.Models.IngredientiProdottoRistorante", b =>
                {
                    b.Property<int>("IdIngredientiProdottoRistorante")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdIngredientiProdottoRistorante"));

                    b.Property<int>("IdProdottoRistorante")
                        .HasColumnType("int");

                    b.Property<string>("NomeIngrediente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PrezzoIngrediente")
                        .HasColumnType("float");

                    b.HasKey("IdIngredientiProdottoRistorante");

                    b.HasIndex("IdProdottoRistorante");

                    b.ToTable("IngredientiProdottiRistoranti");
                });

            modelBuilder.Entity("Back_End_Capstone.Models.IngredientiRistorante", b =>
                {
                    b.Property<int>("IdIngrediente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdIngrediente"));

                    b.Property<int>("IdRistorante")
                        .HasColumnType("int");

                    b.Property<string>("NomeIngrediente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PrezzoIngrediente")
                        .HasColumnType("float");

                    b.HasKey("IdIngrediente");

                    b.HasIndex("IdRistorante");

                    b.ToTable("IngredientiRistoranti");
                });

            modelBuilder.Entity("Back_End_Capstone.Models.Ordini", b =>
                {
                    b.Property<int>("IdOrdini")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdOrdini"));

                    b.Property<DateTime>("DataOrdine")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdRistorante")
                        .HasColumnType("int");

                    b.Property<int>("IdUtente")
                        .HasColumnType("int");

                    b.Property<string>("IndirizzoConsegna")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsOrdineConsegnato")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOrdineEvaso")
                        .HasColumnType("bit");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("OrarioConsegnaPrevista")
                        .HasColumnType("time");

                    b.HasKey("IdOrdini");

                    b.HasIndex("IdRistorante");

                    b.HasIndex("IdUtente");

                    b.ToTable("Ordini");
                });

            modelBuilder.Entity("Back_End_Capstone.Models.ProdottiAcquistati", b =>
                {
                    b.Property<int>("IdProdottiAcquistati")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProdottiAcquistati"));

                    b.Property<string>("DescrizioneProdotto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdOrdine")
                        .HasColumnType("int");

                    b.Property<string>("ImgProdotto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeProdotto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PrezzoProdotto")
                        .HasColumnType("float");

                    b.Property<int>("Quantita")
                        .HasColumnType("int");

                    b.HasKey("IdProdottiAcquistati");

                    b.HasIndex("IdOrdine");

                    b.ToTable("ProdottiAcquistati");
                });

            modelBuilder.Entity("Back_End_Capstone.Models.ProdottoRistorante", b =>
                {
                    b.Property<int>("IdProdottoRistorante")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProdottoRistorante"));

                    b.Property<string>("DescrizioneProdotto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdRistorante")
                        .HasColumnType("int");

                    b.Property<string>("ImgProdotto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeProdotto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PrezzoProdotto")
                        .HasColumnType("float");

                    b.HasKey("IdProdottoRistorante");

                    b.HasIndex("IdRistorante");

                    b.ToTable("ProdottiRistoranti");
                });

            modelBuilder.Entity("Back_End_Capstone.Models.Ristorante", b =>
                {
                    b.Property<int>("IdRistorante")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRistorante"));

                    b.Property<string>("CAP")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("Citta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descrizione")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdAzienda")
                        .HasColumnType("int");

                    b.Property<string>("ImgCopertina")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImgLogo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Indirizzo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Latitudine")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Longitudine")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeRistorante")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("OrarioApertura")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("OrarioChiusura")
                        .HasColumnType("time");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdRistorante");

                    b.HasIndex("IdAzienda");

                    b.ToTable("Ristoranti");
                });

            modelBuilder.Entity("Back_End_Capstone.Models.Utente", b =>
                {
                    b.Property<int>("IdUtente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUtente"));

                    b.Property<string>("CAP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cellulare")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Citta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cognome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Indirizzo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUtente");

                    b.ToTable("Utenti");
                });

            modelBuilder.Entity("Back_End_Capstone.Models.CategorieRistorante", b =>
                {
                    b.HasOne("Back_End_Capstone.Models.Categorie", "Categorie")
                        .WithMany("CategorieRistorante")
                        .HasForeignKey("IdCategorie")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Back_End_Capstone.Models.Ristorante", "Ristorante")
                        .WithMany("CategorieRistorante")
                        .HasForeignKey("IdRistorante")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categorie");

                    b.Navigation("Ristorante");
                });

            modelBuilder.Entity("Back_End_Capstone.Models.IngredientiProdottoAcquistato", b =>
                {
                    b.HasOne("Back_End_Capstone.Models.ProdottiAcquistati", "ProdottoAcquistato")
                        .WithMany("IngredientiProdottoAcquistato")
                        .HasForeignKey("IdProdottoAcquistato")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProdottoAcquistato");
                });

            modelBuilder.Entity("Back_End_Capstone.Models.IngredientiProdottoRistorante", b =>
                {
                    b.HasOne("Back_End_Capstone.Models.ProdottoRistorante", "ProdottoRistorante")
                        .WithMany("IngredientiProdottoRistorante")
                        .HasForeignKey("IdProdottoRistorante")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProdottoRistorante");
                });

            modelBuilder.Entity("Back_End_Capstone.Models.IngredientiRistorante", b =>
                {
                    b.HasOne("Back_End_Capstone.Models.Ristorante", "Ristorante")
                        .WithMany("IngredientiRistorante")
                        .HasForeignKey("IdRistorante")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ristorante");
                });

            modelBuilder.Entity("Back_End_Capstone.Models.Ordini", b =>
                {
                    b.HasOne("Back_End_Capstone.Models.Ristorante", "Ristorante")
                        .WithMany("Ordini")
                        .HasForeignKey("IdRistorante")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Back_End_Capstone.Models.Utente", "Utente")
                        .WithMany("Ordini")
                        .HasForeignKey("IdUtente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ristorante");

                    b.Navigation("Utente");
                });

            modelBuilder.Entity("Back_End_Capstone.Models.ProdottiAcquistati", b =>
                {
                    b.HasOne("Back_End_Capstone.Models.Ordini", "Ordine")
                        .WithMany("ProdottiAcquistati")
                        .HasForeignKey("IdOrdine")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ordine");
                });

            modelBuilder.Entity("Back_End_Capstone.Models.ProdottoRistorante", b =>
                {
                    b.HasOne("Back_End_Capstone.Models.Ristorante", "Ristorante")
                        .WithMany("ProdottiRistorante")
                        .HasForeignKey("IdRistorante")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ristorante");
                });

            modelBuilder.Entity("Back_End_Capstone.Models.Ristorante", b =>
                {
                    b.HasOne("Back_End_Capstone.Models.Azienda", "Azienda")
                        .WithMany("Ristoranti")
                        .HasForeignKey("IdAzienda")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Azienda");
                });

            modelBuilder.Entity("Back_End_Capstone.Models.Azienda", b =>
                {
                    b.Navigation("Ristoranti");
                });

            modelBuilder.Entity("Back_End_Capstone.Models.Categorie", b =>
                {
                    b.Navigation("CategorieRistorante");
                });

            modelBuilder.Entity("Back_End_Capstone.Models.Ordini", b =>
                {
                    b.Navigation("ProdottiAcquistati");
                });

            modelBuilder.Entity("Back_End_Capstone.Models.ProdottiAcquistati", b =>
                {
                    b.Navigation("IngredientiProdottoAcquistato");
                });

            modelBuilder.Entity("Back_End_Capstone.Models.ProdottoRistorante", b =>
                {
                    b.Navigation("IngredientiProdottoRistorante");
                });

            modelBuilder.Entity("Back_End_Capstone.Models.Ristorante", b =>
                {
                    b.Navigation("CategorieRistorante");

                    b.Navigation("IngredientiRistorante");

                    b.Navigation("Ordini");

                    b.Navigation("ProdottiRistorante");
                });

            modelBuilder.Entity("Back_End_Capstone.Models.Utente", b =>
                {
                    b.Navigation("Ordini");
                });
#pragma warning restore 612, 618
        }
    }
}
